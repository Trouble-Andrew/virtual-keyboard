import Observable from '../modules/observable';

class KeyboardModel extends Observable {
  constructor() {
    super();
    this.language = localStorage.getItem('language') || 'en';
    this.upperCase = false;

    this.chars = {
      en: {
        KeyQ: 'q',
        KeyW: 'w',
        KeyE: 'e',
        KeyR: 'r',
        KeyT: 't',
        KeyY: 'y',
        KeyU: 'u',
        KeyI: 'i',
        KeyO: 'o',
        KeyP: 'p',
        KeyA: 'a',
        KeyS: 's',
        KeyD: 'd',
        KeyF: 'f',
        KeyG: 'g',
        KeyH: 'h',
        KeyJ: 'j',
        KeyK: 'k',
        KeyL: 'l',
        KeyZ: 'z',
        KeyX: 'x',
        KeyC: 'c',
        KeyV: 'v',
        KeyB: 'b',
        KeyN: 'n',
        KeyM: 'm',
        Semicolon: ':<br />;',
        Quote: '"<br />\'',
        Comma: '&lt;<br />,',
        Period: '><br />.',
        Slash: '?<br />/',
        Backquote: '~<br />\'',
        BracketLeft: '{<br />[',
        BracketRight: '}<br />]',
        Backslash: '|<br />&#92;',
      },
      ru: {
        KeyQ: 'й',
        KeyW: 'ц',
        KeyE: 'у',
        KeyR: 'к',
        KeyT: 'е',
        KeyY: 'н',
        KeyU: 'г',
        KeyI: 'ш',
        KeyO: 'щ',
        KeyP: 'з',
        KeyA: 'ф',
        KeyS: 'ы',
        KeyD: 'в',
        KeyF: 'а',
        KeyG: 'п',
        KeyH: 'р',
        KeyJ: 'о',
        KeyK: 'л',
        KeyL: 'д',
        KeyZ: 'я',
        KeyX: 'ч',
        KeyC: 'с',
        KeyV: 'м',
        KeyB: 'и',
        KeyN: 'т',
        KeyM: 'ь',
        Semicolon: 'ж',
        Quote: 'э',
        Comma: 'б',
        Period: 'ю',
        Slash: '.',
        Backquote: 'ё',
        BracketLeft: 'х',
        BracketRight: 'ъ',
        Backslash: '|<br />&#92;',
      },
    };
  }
}

export default KeyboardModel;
